apiVersion: v1
kind: Pod
metadata:
  name: demo-app
spec:
  containers:
  - name: app
    image: nginx:1.21.1
    volumeMounts:
    - name: log-volume
      mountPath: /var/log/nginx
  - name: log-collector
    image: busybox:latest
    command: ["/bin/sh", "-c", "tail -n +1 -f /var/log/nginx/*.log"]
    volumeMounts:
    - name: log-volume
      mountPath: /var/log/nginx
  volumes:
  - name: log-volume
    emptyDir: {}
    
    
1) In this example, the Pod runs an Nginx web server in the “app” container, and a sidecar container “log-collector” that collects the logs produced by Nginx using the “tail” command.

The “log-collector” container mounts an emptyDir volume named “log-volume” at “/var/log/nginx” to access the logs produced by the “app” container.

2) Apply the Pod configuration to Kubernetes using the kubectl apply command
$ kubectl apply -f sidecar-pod.yaml

3) Check the logs produced by the log-collector container using the kubectl logs command
$ kubectl logs demo-app -c log-collector

This will display the logs collected by the log-collector container in real-time.
